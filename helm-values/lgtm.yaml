---
grafana:
  # -- Deploy Grafana if enabled. See [upstream readme](https://github.com/grafana/helm-charts/tree/main/charts/grafana#configuration) for full values reference.
  enabled: true
  sidecar:
    dashboards:
      enabled: true
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Loki
          uid: loki
          type: loki
          url: http://{{ .Release.Name }}-loki-gateway
          isDefault: false
        - name: Mimir
          uid: prom
          type: prometheus
          url: http://{{ .Release.Name }}-mimir-nginx/prometheus
          isDefault: true
        - name: Tempo
          uid: tempo
          type: tempo
          url: http://{{ .Release.Name }}-tempo-query-frontend:3100
          isDefault: false
          jsonData:
            tracesToLogsV2:
              datasourceUid: loki
            lokiSearch:
              datasourceUid: loki
            tracesToMetrics:
              datasourceUid: prom
            serviceMap:
              datasourceUid: prom

loki:
  # -- Deploy Loki if enabled. See [upstream readme](https://github.com/grafana/helm-charts/tree/main/charts/loki-distributed#values) for full values reference.
  enabled: true
  commonConfig:
    replication_factor: 1
  loki:
    server:
      grpc_server_max_recv_msg_size: 104857600
      grpc_server_max_send_msg_size: 104857600
    schemaConfig:
      configs:
      - from: "2020-09-07"
        store: tsdb
        object_store: aws
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
    storageConfig:
      tsdb_shipper:
        shared_store: s3
        active_index_directory: /var/loki/index
        cache_location: /var/loki/cache
        cache_ttl: 168h
      aws:
        s3: http://lgtm:supersecret@lgtm-minio:9000/loki
        s3forcepathstyle: true
        endpoint: lgtm-minio:9000
        insecure: true
    
   

# -- Mimir chart values. Resources are set to a minimum by default.
mimir:
  # -- Deploy Mimir if enabled. See [upstream values.yaml](https://github.com/grafana/mimir/blob/main/operations/helm/charts/mimir-distributed/values.yaml) for full values reference.
  enabled: true
  server:
      grpc_server_max_concurrent_streams: 1000
      grpc_server_max_recv_msg_size: 104857600
      grpc_server_max_send_msg_size: 104857600
  structuredConfig:
      limits:
        max_global_series_per_user: 10000000
        ingestion_rate: 150000
        ingestion_burst_size: 300000
  metaMonitoring:
    dashboards:
      enabled: true
    serviceMonitor:
      enabled: true
      labels:
        release: prometheus-operator
    prometheusRule:
      enabled: true
      mimirAlerts: true
      mimirRules: true
      labels:
        release: prometheus-operator
  compactor:
    resources:
      requests:
        cpu: 20m
  distributor:
    resources:
      requests:
        cpu: 20m
  ingester:
    replicas: 2
    zoneAwareReplication:
      enabled: false
    resources:
      requests:
        cpu: 20m
  overrides_exporter:
    resources:
      requests:
        cpu: 20m
  querier:
    replicas: 1
    resources:
      requests:
        cpu: 20m
  query_frontend:
    resources:
      requests:
        cpu: 20m
  query_scheduler:
    replicas: 1
    resources:
      requests:
        cpu: 20m
  
  store_gateway:
    zoneAwareReplication:
      enabled: false
    resources:
      requests:
        cpu: 20m
  minio:
    enabled: true
    rootPassword: supersecret
    rootUser: lgtm
    buckets:
    - name: mimir-tsdb
      policy: none
      purge: false
    - name: mimir-ruler
      policy: none
      purge: false
    - name: loki
      policy: none
      purge: false
    - name: tempo
      policy: none
      purge: false
  rollout_operator:
    resources:
      requests:
        cpu: 20m
        
  # optional
  ruler:
    enabled: true
  alertmanager:
    enabled: false

tempo:
  # -- Deploy Tempo if enabled.  See [upstream readme](https://github.com/grafana/helm-charts/blob/main/charts/tempo-distributed/README.md#values) for full values reference.
  enabled: true
  metaMonitoring:
    serviceMonitor:
      enabled: true
      labels:
        release: prometheus-operator
    prometheusRule:
      enabled: true
      labels:
        release: prometheus-operator
  storage:
    trace: 
      backend: s3
      s3: 
        access_key: lgtm
        bucket: tempo
        prefix: traces
        endpoint: lgtm-minio:9000
        insecure: true
        secret_key: supersecret
  ingester:
    replicas: 1
    config: 
      replication_factor: 1
  traces:
    otlp:
      grpc:
        enabled: true
      http:
        enabled: true
  metricsGenerator:
    enabled: true
    config:
      storage:
        remote_write:
        - url: http://lgtm-mimir-nginx/api/v1/push
          send_exemplars: true
  global_overrides:
    defaults:
      metrics_generator:
        processors:
          - service-graphs
          - span-metrics